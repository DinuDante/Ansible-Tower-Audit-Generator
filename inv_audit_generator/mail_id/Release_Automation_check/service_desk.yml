---
- name: Playbook to check the Server Accesibility
  hosts: localhost 
  gather_facts: false       
  vars_files: extra_var.yml
  tasks:
   - block:
        - name: Generate Accesskey CAService desk
          uri:
           url: "{{ servicedesk_url }}/caisd-rest/rest_access"   
           user: "{{ servicedesk_user }}"    
           password: "{{ servicedesk_pass }}"
           validate_certs: no
           headers:
              Accept: "application/json"
              Content-Type: "application/xml"
           body: "<rest_access/>"
           body_format: "raw"
           method: POST
           return_content: yes
           force_basic_auth: yes
           status_code: 201
          register: caservicedesk_token
          #delegate_to: localhost
          
   - block:     
        - name: Validate the Incident ticket in CA service desk
          uri:
           url: "{{ servicedesk_url }}/caisd-rest/cr/COMMON_NAME-{{ caservicedesk_ticket }}"
           user: "{{ servicedesk_user }}"
           password: "{{ servicedesk_pass }}"
           validate_certs: no
           headers:
             Accept: "application/json"
             Content-Type: "application/xml"
             X-AccessKey: "{{ caservicedesk_token.json.rest_access.access_key }}"
           method: GET
           force_basic_auth: yes
           status_code: 200
          #delegate_to: localhost
          ignore_errors: true
          register: caservicedesk_output
          when: caservicedesk_token.status == 201
        
        - name: debug msg servicedesk Incident category
          debug:
            msg: "Tciket {{ caservicedesk_output.json.cr['@COMMON_NAME'] }}  exist in CA servicedesk Incident category"
          when: >-
            (caservicedesk_output.status == 200) and caservicedesk_output.json.cr['@COMMON_NAME'] == '{{ caservicedesk_ticket }}'
       
        - name: Validate the Release deployment status in CA service desk
          uri:
           url: "{{ servicedesk_url }}/caisd-rest/iss/COMMON_NAME-{{ caservicedesk_ticket }}/status"
           user: "{{ servicedesk_user }}"
           password: "{{ servicedesk_pass }}"
           validate_certs: no
           headers:
             Accept: "application/json"
             Content-Type: "application/xml"
             X-AccessKey: "{{ caservicedesk_token.json.rest_access.access_key }}"
           method: GET
           force_basic_auth: yes
           status_code: 200
          #delegate_to: localhost
          ignore_errors: true
          register: caservicedesk_release_output
          when: caservicedesk_token.status == 201 and caservicedesk_output.status != 200
        - name: debug msg  CA service Desk Release Category
          debug:
            msg: "Tciket {{ caservicedesk_ticket }}  with status '{{ caservicedesk_release_output.json.issstat['@COMMON_NAME'] }}' exist in CA service Desk Release Category"
          when: >-
            (caservicedesk_output.status != 200) and
            (caservicedesk_release_output.status == 200) 
#            ('Release Deployment' in caservicedesk_release_output.json.issstat['@COMMON_NAME'])
          failed_when: "'Release Deployment' not in caservicedesk_release_output.json.issstat['@COMMON_NAME']"

        - name: debug msg if ticket not exit in servicedesk any category
          debug:
            msg: "Tciket {{ caservicedesk_ticket }} not exist in CA service Desk"
          when: caservicedesk_output.status != 200 and caservicedesk_release_output.status != 200
          failed_when: caservicedesk_output.status != 200 and caservicedesk_release_output.status != 200
